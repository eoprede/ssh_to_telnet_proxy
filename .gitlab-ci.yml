stages:
  - test
  - build
  - deploy


test:
  stage: test
  tags:
  - python3
  script:
  - pip3 install -i https://nexus.srv.satec.es/repository/pypi-public/simple --cert --cert /usr/local/share/ca-certificates/kojak.crt  -r test-requirements.txt
  - make sonar



build_rc:
  stage: build
  tags:
  - python3
  except:
    refs:
    - /^v[0-9]+\.[0-9]\.[0-9]$/
    - master
  script:
  - pip3 install setuptools wheel
  - python3 setup.py sdist bdist_wheel
  artifacts:
    when: on_success
    expire_in: 1 day
    paths:
    - dist/

build_release:
  stage: build
  tags:
  - python3
  only:
    refs:
    - /^v[0-9]+\.[0-9]\.[0-9]$/
  script:
  - pip3 install setuptools wheel
  - python3 setup.py sdist bdist_wheel
  artifacts:
    when: on_success
    expire_in: 1 day
    paths:
    - dist/

deploy_rc:
  stage: deploy
  tags:
  - python3
  except:
    refs:
    - /^v[0-9]+\.[0-9]\.[0-9]$/
    - master
  dependencies:
  - build_rc
  script:
  - pip3 install twine
  - export VERSION=$(grep -i version setup.py | cut -d'"' -f2 | cut -d'"' -f1 | tr '[:upper:]' '[:lower:]')
  - echo $VERSION
  - if echo $VERSION | grep -q -E "^[0-9]+\.[0-9]+\.[0-9]+rc[0-9]+$"; then export TWINE_REPOSITORY_URL="${PYPI_REPOSITORY_BASE_URL}pypi-snapshots/"; else echo "RELEASE NAME NOT CORRECT -> $VERSION";false;fi
  - export TWINE_CERT="/usr/local/share/ca-certificates/kojak.crt"
  - python3 -m twine upload dist/*



deploy_release:
  stage: deploy
  only:
    refs:
    - /^v[0-9]+\.[0-9]\.[0-9]$/
  tags:
  - python3
  dependencies:
  - build_release
  script:
  - pip3 install twine
  - export VERSION=$(grep -i version setup.py | cut -d'"' -f2 | cut -d'"' -f1 | tr '[:upper:]' '[:lower:]')
  - echo $VERSION
  - if echo $VERSION | grep -q -E "^[0-9]+\.[0-9]+\.[0-9]+$"; then export TWINE_REPOSITORY_URL="${PYPI_REPOSITORY_BASE_URL}pypi-releases/"; else echo "RELEASE NAME NOT CORRECT -> $VERSION";false;fi
  - export TWINE_CERT="/usr/local/share/ca-certificates/kojak.crt"
  - python3 -m twine upload dist/*
